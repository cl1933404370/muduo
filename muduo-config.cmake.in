# CMake configuration file for muduo
#
# This provides the muduo::muduo target, which you can depend on by adding it
# to your target_link_libraries().
#
# It also defines the following variables, although using these directly is not
# necessary if you use the muduo::muduo target instead.
#  MUDUO_INCLUDE_DIR
#  MUDUO_LIBRARIES
set ( PackageName @PackageName@ )
set ( LIB_NAME @LIB_NAME@ )
set ( ${PackageName}_VERSION ${PACKAGE_VERSION} )
message ( STATUS "PackageName = ${PackageName}" )
@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

set_and_check(MUDUO_INCLUDE_DIRS "@PACKAGE_INCLUDE_INSTALL_DIR@")
set_and_check(MUDUO_INCLUDE_DIR "@PACKAGE_INCLUDE_INSTALL_DIR@")
set_and_check(MUDUO_CMAKE_DIR "@PACKAGE_CMAKE_INSTALL_DIR@")

# find_dependency() ends up changing PACKAGE_PREFIX_DIR, so save
# muduo's prefix directory in the MUDUO_PREFIX_DIR variable
set(MUDUO_PREFIX_DIR "${PACKAGE_PREFIX_DIR}")

# Include the muduo-targets.cmake file, which is generated from our CMake rules
include(${CMAKE_CURRENT_LIST_DIR}/${PROJECT_NAME}-targets.cmake)

# Set MUDUO_LIBRARIES from our muduo::muduo target
set(${PackageName}_LIBRARIES muduo::muduo)

# Find muduo's dependencies
find_dependency(fmt REQUIRED)
find_dependency(c-ares REQUIRED)
find_dependency(ZLIB REQUIRED)
find_dependency(CURL REQUIRED)
find_dependency(Protobuf REQUIRED)
set(Boost_USE_STATIC_LIBS "@FOLLY_BOOST_LINK_STATIC@")
find_dependency(Boost 1.51.0 MODULE
  COMPONENTS
   unit_test_framework
    context
    filesystem
    program_options
    regex
    system
    thread
  REQUIRED
)
check_required_components("@PROJECT_NAME@")
if (NOT muduo_FIND_QUIETLY)
  message(STATUS "Found muduo: ${MUDUO_PREFIX_DIR}")
endif()